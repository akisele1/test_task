apiVersion: v1
kind: Service
metadata:
  labels:
    app: test-nginx1
  name: test-nginx1
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    name: http
    protocol: TCP
  - port: 443
    name: https
    protocol: TCP
    targetPort: 443
  selector:
    app: test-nginx1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: test-nginx1
  name: test-nginx1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-nginx1
  template:
    metadata:
      labels:
        app: test-nginx1
    spec:
      containers:
      - name: test-nginx1
        image: akisele1/test:nginx_server
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: per-vol
  labels:
    type: local
spec:
  accessModes:
    - ReadOnlyMany
  storageClassName: manual
  capacity:
    storage: 5Gi
  hostPath:
    path: "/data/test-nginx/"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadOnlyMany
  resources:
    requests:
      storage: 3Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: test-nginx-vol
  name: test-nginx-vol
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    name: http
    protocol: TCP
  - port: 443
    name: https
    protocol: TCP
    targetPort: 443
  selector:
    app: test-nginx-vol
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: test-nginx-vol
  name: test-nginx-vol
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-nginx-vol
  template:
    metadata:
      labels:
        app: test-nginx-vol
    spec:
      containers:
      - name: test-nginx
        image: akisele1/test:nginx_server
        volumeMounts:
          - mountPath: "/usr/share/nginx/html"
            name: test-nginx-storage
      volumes:
      - name: test-nginx-storage
        persistentVolumeClaim:
          claimName: pv-claim
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-test-nginx
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
    - host: mytest.web
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: test-nginx1
                port:
                  number: 80
          - path: /persist-vol
            pathType: Prefix
            backend:
              service:
                name: test-nginx-vol
                port:
                  number: 80
